[2018-10-15 17:02:00,959] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-10-15 17:02:01,229] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(bitcoin_price_topic-0 -> Vector(0), __confluent.support.metrics-0 -> Vector(0), twitter_topic-0 -> Vector(0), bitcoin_transaction_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-10-15 17:02:01,229] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2018-10-15 17:02:01,229] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-10-15 17:07:01,229] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-10-15 17:07:01,230] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(bitcoin_price_topic-0 -> Vector(0), __confluent.support.metrics-0 -> Vector(0), twitter_topic-0 -> Vector(0), bitcoin_transaction_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-10-15 17:07:01,230] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2018-10-15 17:07:01,230] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-10-15 17:12:01,230] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-10-15 17:12:01,416] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(bitcoin_price_topic-0 -> Vector(0), __confluent.support.metrics-0 -> Vector(0), twitter_topic-0 -> Vector(0), bitcoin_transaction_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-10-15 17:12:01,416] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2018-10-15 17:12:01,416] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-10-15 17:17:01,416] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-10-15 17:17:01,447] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(bitcoin_price_topic-0 -> Vector(0), __confluent.support.metrics-0 -> Vector(0), twitter_topic-0 -> Vector(0), bitcoin_transaction_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-10-15 17:17:01,447] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2018-10-15 17:17:01,447] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-10-15 17:22:01,447] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-10-15 17:22:01,467] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(bitcoin_price_topic-0 -> Vector(0), __confluent.support.metrics-0 -> Vector(0), twitter_topic-0 -> Vector(0), bitcoin_transaction_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-10-15 17:22:01,467] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2018-10-15 17:22:01,467] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-10-15 17:27:01,467] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-10-15 17:27:01,468] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(bitcoin_price_topic-0 -> Vector(0), __confluent.support.metrics-0 -> Vector(0), twitter_topic-0 -> Vector(0), bitcoin_transaction_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-10-15 17:27:01,468] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2018-10-15 17:27:01,468] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-10-15 17:32:01,468] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-10-15 17:32:01,468] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(bitcoin_price_topic-0 -> Vector(0), __confluent.support.metrics-0 -> Vector(0), twitter_topic-0 -> Vector(0), bitcoin_transaction_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-10-15 17:32:01,469] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2018-10-15 17:32:01,469] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-10-15 17:37:01,469] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-10-15 17:37:01,469] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(bitcoin_price_topic-0 -> Vector(0), __confluent.support.metrics-0 -> Vector(0), twitter_topic-0 -> Vector(0), bitcoin_transaction_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-10-15 17:37:01,469] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2018-10-15 17:37:01,469] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-10-15 17:42:01,530] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2018-10-15 17:42:02,683] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(bitcoin_price_topic-0 -> Vector(0), __confluent.support.metrics-0 -> Vector(0), twitter_topic-0 -> Vector(0), bitcoin_transaction_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2018-10-15 17:42:02,683] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2018-10-15 17:42:02,684] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2018-10-15 17:43:17,521] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2018-10-15 17:43:18,550] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2018-10-15 17:43:33,072] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2018-10-15 17:43:35,069] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2018-10-15 17:43:36,264] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2018-10-15 17:43:37,773] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2018-10-15 17:43:38,304] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2018-10-15 17:43:45,103] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2018-10-15 17:43:45,141] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2018-10-15 17:43:45,141] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2018-10-15 17:43:45,141] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2018-10-15 17:43:45,141] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2018-10-15 17:43:45,141] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2018-10-15 17:44:23,132] ERROR [ControllerEventThread controllerId=0] Error processing event RegisterBrokerAndReelect (kafka.controller.ControllerEventManager$ControllerEventThread)
kafka.zookeeper.ZooKeeperClientExpiredException: Session expired either before or while waiting for connection
	at kafka.zookeeper.ZooKeeperClient$$anonfun$kafka$zookeeper$ZooKeeperClient$$waitUntilConnected$1.apply$mcV$sp(ZooKeeperClient.scala:233)
	at kafka.zookeeper.ZooKeeperClient$$anonfun$kafka$zookeeper$ZooKeeperClient$$waitUntilConnected$1.apply(ZooKeeperClient.scala:221)
	at kafka.zookeeper.ZooKeeperClient$$anonfun$kafka$zookeeper$ZooKeeperClient$$waitUntilConnected$1.apply(ZooKeeperClient.scala:221)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:250)
	at kafka.zookeeper.ZooKeeperClient.kafka$zookeeper$ZooKeeperClient$$waitUntilConnected(ZooKeeperClient.scala:221)
	at kafka.zookeeper.ZooKeeperClient$$anonfun$waitUntilConnected$1.apply$mcV$sp(ZooKeeperClient.scala:215)
	at kafka.zookeeper.ZooKeeperClient$$anonfun$waitUntilConnected$1.apply(ZooKeeperClient.scala:215)
	at kafka.zookeeper.ZooKeeperClient$$anonfun$waitUntilConnected$1.apply(ZooKeeperClient.scala:215)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:250)
	at kafka.zookeeper.ZooKeeperClient.waitUntilConnected(ZooKeeperClient.scala:214)
	at kafka.zk.KafkaZkClient.retryRequestsUntilConnected(KafkaZkClient.scala:1461)
	at kafka.zk.KafkaZkClient.kafka$zk$KafkaZkClient$$retryRequestUntilConnected(KafkaZkClient.scala:1437)
	at kafka.zk.KafkaZkClient$CheckedEphemeral.create(KafkaZkClient.scala:1482)
	at kafka.zk.KafkaZkClient.checkedEphemeralCreate(KafkaZkClient.scala:1473)
	at kafka.zk.KafkaZkClient.registerBrokerInZk(KafkaZkClient.scala:84)
	at kafka.controller.KafkaController$RegisterBrokerAndReelect$.process(KafkaController.scala:1487)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:69)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:69)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:69)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:68)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2018-10-15 17:44:28,032] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2018-10-15 17:44:28,032] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2018-10-15 17:44:28,032] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2018-10-15 17:44:28,032] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2018-10-15 17:44:28,033] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2018-10-15 17:44:41,751] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2018-10-15 17:44:41,803] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2018-10-15 17:44:42,438] INFO [Controller id=0] Initialized controller epoch to 1 and zk version 0 (kafka.controller.KafkaController)
[2018-10-15 17:44:42,438] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2018-10-15 17:44:43,305] INFO [Controller id=0] Epoch incremented to 2 (kafka.controller.KafkaController)
[2018-10-15 17:44:43,305] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2018-10-15 17:44:43,826] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2018-10-15 17:44:46,061] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2018-10-15 17:44:46,062] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2018-10-15 17:44:52,125] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2018-10-15 17:44:53,721] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2018-10-15 17:44:54,847] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2018-10-15 17:44:54,847] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2018-10-15 17:44:54,847] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2018-10-15 17:44:54,847] INFO [Controller id=0] Current list of topics in the cluster: Set(twitter_topic, bitcoin_price_topic, __confluent.support.metrics, bitcoin_transaction_topic) (kafka.controller.KafkaController)
[2018-10-15 17:44:54,847] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2018-10-15 17:44:54,926] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2018-10-15 17:44:54,926] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2018-10-15 17:44:54,926] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2018-10-15 17:44:55,079] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2018-10-15 17:44:56,692] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2018-10-15 17:45:01,222] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2018-10-15 17:45:01,395] INFO [RequestSendThread controllerId=0] Controller 0 connected to narendra-LT:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2018-10-15 17:45:11,075] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2018-10-15 17:45:11,635] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=bitcoin_price_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__confluent.support.metrics,Partition=0,Replica=0] -> OnlineReplica, [Topic=bitcoin_transaction_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=twitter_topic,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2018-10-15 17:45:11,635] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2018-10-15 17:45:11,635] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2018-10-15 17:45:11,635] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(bitcoin_price_topic-0 -> OnlinePartition, __confluent.support.metrics-0 -> OnlinePartition, twitter_topic-0 -> OnlinePartition, bitcoin_transaction_topic-0 -> OnlinePartition) (kafka.controller.PartitionStateMachine)
[2018-10-15 17:45:11,635] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2018-10-15 17:45:12,322] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2018-10-15 17:45:12,322] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2018-10-15 17:45:12,352] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2018-10-15 17:45:12,352] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2018-10-15 17:45:12,352] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2018-10-15 17:50:45,451] ERROR [Controller id=0] Error while electing or becoming controller on broker 0 (kafka.controller.KafkaController)
kafka.zookeeper.ZooKeeperClientExpiredException: Session expired either before or while waiting for connection
	at kafka.zookeeper.ZooKeeperClient$$anonfun$kafka$zookeeper$ZooKeeperClient$$waitUntilConnected$1.apply$mcV$sp(ZooKeeperClient.scala:233)
	at kafka.zookeeper.ZooKeeperClient$$anonfun$kafka$zookeeper$ZooKeeperClient$$waitUntilConnected$1.apply(ZooKeeperClient.scala:221)
	at kafka.zookeeper.ZooKeeperClient$$anonfun$kafka$zookeeper$ZooKeeperClient$$waitUntilConnected$1.apply(ZooKeeperClient.scala:221)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:250)
	at kafka.zookeeper.ZooKeeperClient.kafka$zookeeper$ZooKeeperClient$$waitUntilConnected(ZooKeeperClient.scala:221)
	at kafka.zookeeper.ZooKeeperClient$$anonfun$waitUntilConnected$1.apply$mcV$sp(ZooKeeperClient.scala:215)
	at kafka.zookeeper.ZooKeeperClient$$anonfun$waitUntilConnected$1.apply(ZooKeeperClient.scala:215)
	at kafka.zookeeper.ZooKeeperClient$$anonfun$waitUntilConnected$1.apply(ZooKeeperClient.scala:215)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:250)
	at kafka.zookeeper.ZooKeeperClient.waitUntilConnected(ZooKeeperClient.scala:214)
	at kafka.zk.KafkaZkClient.retryRequestsUntilConnected(KafkaZkClient.scala:1461)
	at kafka.zk.KafkaZkClient.kafka$zk$KafkaZkClient$$retryRequestUntilConnected(KafkaZkClient.scala:1437)
	at kafka.zk.KafkaZkClient.deletePreferredReplicaElection(KafkaZkClient.scala:858)
	at kafka.controller.KafkaController.removePartitionsFromPreferredReplicaElection(KafkaController.scala:901)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$onPreferredReplicaElection(KafkaController.scala:608)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:252)
	at kafka.controller.KafkaController.kafka$controller$KafkaController$$elect(KafkaController.scala:1203)
	at kafka.controller.KafkaController$Reelect$.process(KafkaController.scala:1479)
	at kafka.controller.KafkaController$RegisterBrokerAndReelect$.process(KafkaController.scala:1488)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply$mcV$sp(ControllerEventManager.scala:69)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:69)
	at kafka.controller.ControllerEventManager$ControllerEventThread$$anonfun$doWork$1.apply(ControllerEventManager.scala:69)
	at kafka.metrics.KafkaTimer.time(KafkaTimer.scala:31)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:68)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:82)
[2018-10-15 17:50:45,709] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2018-10-15 17:50:45,709] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2018-10-15 17:50:45,709] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2018-10-15 17:50:45,709] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2018-10-15 17:50:45,709] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2018-10-15 17:50:45,709] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2018-10-15 17:50:45,709] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2018-10-15 17:50:45,711] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
